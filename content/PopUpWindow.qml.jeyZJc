import QtQuick 6.2
import Pomodor_Qt_Framework
import QtQuick.Controls
import QtQuick.Studio.Effects
import QtQuick.Layouts
import Qt.labs.platform








Window {
    id: window
    width: 610
    height: 230

    property alias clockItem: clockItem


    SystemTrayIcon {
        id: sysTrayIcon
        visible: true
        icon.source: "qrc:/Images/TimerIcon.png"

        onActivated: {
            window.show()
            window.raise()
            window.requestActivate()
        }
    }

    Rectangle {
        id: outerClock
        width: 600
        height: 200
        color: "#f9f4cc"
        radius: 50
        border.color: "#000000"
        border.width: 0
        anchors.verticalCenter: parent.verticalCenter
        anchors.horizontalCenter: parent.horizontalCenter
        layer.enabled: true
        layer.effect: DropShadowEffect {
            id: dropShadow
            radius: 39
            spread: 0.4
            samples: 77
        }

        //Inner Rectangle
        Rectangle {
            id: innerClock
            width: outerClock.width - 75
            height: outerClock.height - 75
            color: "#f8eeb8"
            radius: 29
            border.color: "#97866d"
            border.width: 0
            anchors.verticalCenter: parent.verticalCenter
            layer.enabled: true
            layer.effect: DropShadowEffect {
                id: dropShadow1
                radius: 4
                spread: 0.2
                samples: 53
                verticalOffset: -4
                horizontalOffset: -1
            }
            anchors.verticalCenterOffset: 0
            anchors.horizontalCenterOffset: 0
            anchors.horizontalCenter: parent.horizontalCenter



            // Clock
            FlipItem {
                id: clockItem
                width: 384
                height: 243
                anchors.verticalCenter: parent.verticalCenter
                anchors.verticalCenterOffset: 66
                anchors.horizontalCenterOffset: 107
                anchors.horizontalCenter: parent.horizontalCenter
                transform: Scale { origin.x: clockItem.x; origin.y: clockItem.y; xScale: 0.43; yScale: 0.43}
                onStateChanged: {
                    if(clockItem.state === "StudyTime") {
                        lblTime.text = "Study Time"
                        lblTime.visible = true
                        sysTrayIcon.showMessage("Its Focus Time", "Time To Study")

                    } if(clockItem.state === "BreakTime") {
                        lblTime.text = "BreakTime"
                        lblTime.visible = true
                        sysTrayIcon.showMessage("Its Break Time", "Time For A Break")
                    } else if(clockItem.state === "DefaultState"){
                        lblTime.visible = false
                        rowButtonsDefault.visible = true
                        rowButtonsStarted.visible = false

                    }
                }
            }



            //Upper Circle Rectangle
            Rectangle {

                id: upperCircle
                y: 103
                width: 20
                height: 20
                color: "#fff5bf"
                radius: upperCircle.width
                border.color: "#000000"
                border.width: 4
                anchors.top: parent.top
                anchors.topMargin: 62
                anchors.horizontalCenterOffset: 0
                anchors.horizontalCenter: parent.horizontalCenter
            }

            //Down Circle Rectangle
            Rectangle {
                id: downCircle
                x: 487
                y: 134
                width: 20
                height: 20
                color: "#fff5bf"
                radius: downCircle.width
                border.color: "#000000"
                border.width: 4
                anchors.bottom: parent.bottom
                anchors.bottomMargin: 64
                anchors.horizontalCenterOffset: 0
                anchors.horizontalCenter: parent.horizontalCenter
            }


        }
    }



    Button {
        width: 200
        height: 100
        x: 0
        y: 0
        text: "Open New Windows"

        onClicked: {
            var component = Qt.createComponent("App.qml")
            var newWindow = component.createObject(window)
            window.close()
            newWindow.show()
        }
    }
}
